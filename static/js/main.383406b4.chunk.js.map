{"version":3,"sources":["components/Comment.js","components/CommentsContainer.js","components/Post.js","components/LoginAlert.js","components/ReplyForm.js","components/PostForm.js","App.js","serviceWorker.js","index.js"],"names":["Comment","props","tx","Object","objectSpread","commentTree","path","out","s3","h","username","s5","address","in","e","a","showReplyButton","length","userId","s6","subcomments","comments","commentElements","values","sort","b","i","push","react_default","createElement","replyHandler","className","timeago","onClick","decodeURIComponent","s4","CommentContainer","commentsArray","slice","MoneyButton","require","default","convertToHex","str","hex","charCodeAt","toString","Post","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleCommentsHandler","setState","showComments","state","toggleTipHandler","loggedIn","tip","_this2","url","decodeURI","postData","title","showCommentsFor","selfPost","s7","previouslyVoted","voters","includes","showMoneyButton","previous","elapsed","Date","now","Math","round","msPerMinute","msPerHour","msPerDay","timeDifference","timestamp","rewardInSatoshis","reward","rewardInBitcoin","JSON","parse","moneyButton","style","height","outputs","amount","currency","type","script","to","editable","replyButton","tipToggle","cursor","window","open","toggleComments","width","display","alignItems","justifyContent","React","Component","LoginAlert","onPaymentHandler","payment","cookies","Cookies","input","set","loginHandler","console","log","inputOnChangeHandler","event","target","value","id","name","data-name","xHandler","pointerEvents","onChange","maxLength","placeholder","LoginAlert_MoneyButton","onPayment","ReplyForm","inputChangeHandler","reply","replyingTo","hideReply","defaultValue","ReplyForm_MoneyButton","encodeURIComponent","PostForm","urlChangeHandler","titleChangeHandler","opReturn","opreturn","encodeURI","required","href","PostForm_MoneyButton","finishSubmitHandler","chunkString","len","_offset","_size","ceil","_ret","Array","_i","substring","App","processPostsVotes","transactions","posts","votes","filter","valid","RegExp","test","secondOutput","postTxid","correctAddress","correctAddressSecondOutput","voterId","prevVoters","selfVote","v","postsArray","loadPosts","b64","btoa","stringify","q","find","out.s1","out.s2","limit","dateRange","fetch","headers","key","then","r","json","result","t","createPostVoteSocket","EventSource","onmessage","data","hideLoginAlert","showLoginAlert","submitHandler","posting","replying","mode","switchMode","get","hideReplyFormHandler","postTransaction","loadComments","processComments","maxDepth","rootPath","sendAddress","correctSendAddress","selfComment","pathArray","query","out.s3","$regex","commentsTransactions","createCommentsSocket","socketQuery","commentsSocket","updatedTransactions","concat","toggleDateRange","newState","numTopPosts","headerRight","postElements","pop","Post_Post","changingUsername","charSet","content","paddingBottom","LoginAlert_LoginAlert","PostForm_PostForm","ReplyForm_ReplyForm","padding","paddingRight","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.383406b4.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Comment(props) {\n\n  var tx={...props.commentTree.tx};\n\n  var path = tx.out[0].s3+tx.tx.h;\n  var username = tx.out[0].s5;\n  var address = tx.in[0].e.a\n  var showReplyButton = path.length/64<6 && props.userId!=tx.out[0].s6\n\n  var subcomments = {...props.commentTree};\n  delete subcomments.tx;\n  delete subcomments.comments;\n\n  subcomments = Object.values(subcomments);\n\n  var commentElements=[];\n\n  subcomments.sort(function(a,b){\n    return b.comments-a.comments;\n  })\n\n  for(let i=0;i<subcomments.length;i++){\n    commentElements.push(<Comment replyHandler={props.replyHandler} userId={props.userId} commentTree={subcomments[i]}/>)\n  }\n  \n\n  \n  return (\n    <div className=\"comment\">\n      <div className=\"comment-metadata\">\n\n        <div className=\"metadata\">{tx.out[0].s5}</div>\n        <div className=\"metadata\">{tx.timeago}</div>\n        {showReplyButton?<div className=\"metadata metadata-button\" onClick={() => props.replyHandler(path, username, address )}> reply</div>:null}\n      </div>\n      <div className=\"comment-content\">{decodeURIComponent(tx.out[0].s4)}</div>\n      {commentElements}\n    </div>\n  )\n}","import React from 'react';\nimport Comment from './Comment';\n\n\nexport default function CommentContainer(props){\n\n    var commentsArray = props.comments.slice();\n\n    commentsArray.sort(function (a,b){\n      return b.comments - a.comments;\n    })\n\n    var commentElements = [];\n    if(props.comments){\n      for(let i=0;i<props.comments.length;i++){\n        commentElements.push(<Comment replyHandler={props.replyHandler} userId={props.userId} commentTree={commentsArray[i]}/>)\n      }\n    }\n    \n\n    return(\n        <div className=\"comments-container\">\n          {commentElements}\n          {commentElements.length==0?\"No comments!\":null}\n        </div>\n    )\n}","import React from 'react';\nimport Comment from './Comment';\n\nimport CommentContainer from './CommentsContainer';\nlet MoneyButton = require('@moneybutton/react-money-button').default\n\nfunction convertToHex(str) {\n  var hex = '';\n  for (var i = 0; i < str.length; i++) {\n    hex += '' + str.charCodeAt(i).toString(16);\n  }\n  return hex;\n}\n\nfunction timeDifference(previous) {\n\n  var msPerMinute = 60 * 1000;\n  var msPerHour = msPerMinute * 60;\n  var msPerDay = msPerHour * 24;\n  var msPerMonth = msPerDay * 30;\n  var msPerYear = msPerDay * 365;\n\n  var elapsed = Date.now() - previous;\n\n  if (elapsed < msPerMinute) {\n       return Math.round(elapsed/1000) + ' seconds ago';   \n  }\n\n  else if (elapsed < msPerHour) {\n       return Math.round(elapsed/msPerMinute) + ' minutes ago';   \n  }\n\n  else if (elapsed < msPerDay ) {\n       return Math.round(elapsed/msPerHour ) + ' hours ago';   \n  }\n\n  else if (elapsed < msPerMonth) {\n      return Math.round(elapsed/msPerDay) + ' days ago';   \n  }\n\n  else if (elapsed < msPerYear) {\n      return Math.round(elapsed/msPerMonth) + ' months ago';   \n  }\n\n  else {\n      return Math.round(elapsed/msPerYear ) + ' years ago';   \n  }\n}\n\nexport default class Post extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      showComments: false,\n      tip: false\n    }\n  }\n\n\n\n\n\n  toggleCommentsHandler = () => {\n    this.setState({\n      showComments: !this.state.showComments\n    })\n  }\n\n  toggleTipHandler=()=>{\n    if(this.props.loggedIn){\n      this.setState({ tip: !this.state.tip })\n    } else {\n      this.props.replyHandler()//prompts user to Login\n    }\n  }\n\n\n\n  render() {\n\n    var url = decodeURI(this.props.postData.tx.out[0].s5)\n    var title = decodeURIComponent(this.props.postData.tx.out[0].s4)\n    var username = this.props.postData.tx.out[0].s6\n    var showComments = this.props.showCommentsFor == this.props.postData.tx.tx.h\n    var selfPost = this.props.postData.tx.out[0].s7 == this.props.userId;\n    var previouslyVoted = this.props.postData.voters.includes(this.props.userId);\n    var showMoneyButton= !selfPost&& !previouslyVoted \n    var timeago;\n    this.props.postData.tx.timeago? timeago=this.props.postData.tx.timeago:timeago =timeDifference(this.props.postData.tx.timestamp);\n    \n\n\n    var rewardInSatoshis = this.props.postData.reward;\n    var rewardInBitcoin = JSON.parse(rewardInSatoshis / 100000000).toString();\n    var moneyButton = (<div style={{ height: 50 }} />)\n\n    if (this.props.loggedIn && !this.state.tip) {\n      moneyButton = (<MoneyButton\n\n        outputs={[\n          {\n            amount: 0,\n            currency: 'BSV',\n            type: 'SCRIPT',\n            script: 'OP_RETURN ' + convertToHex('13beK8bifnhuC8pawWvMrPCaWoTQi5LnZf') + ' ' + convertToHex('post/vote') + ' ' + convertToHex('vote') + ' ' + convertToHex(this.props.postData.tx.tx.h) + ' ' + convertToHex(this.props.userId)\n\n          }, {\n            to: this.props.postData.tx.in[0].e.a,\n            amount: '0.01',\n            currency: 'USD',\n\n\n          }\n\n        ]}\n\n\n      />)\n    } else if (this.props.loggedIn && this.state.tip) {\n      moneyButton = (<MoneyButton\n        to={this.props.postData.tx.in[0].e.a}\n        amount='0.01'\n        currency='BSV'\n        editable={true}\n      />)\n    }\n\n\n    if (rewardInBitcoin.length == 1) {\n      rewardInBitcoin += '.00000000'\n    } else if (rewardInBitcoin.length < 10) {\n      while (rewardInBitcoin.length < 10) {\n        rewardInBitcoin += '0'\n      }\n    }\n\n\n    var replyButton = (<div className=\"metadata metadata-button\" onClick={() => this.props.replyHandler(this.props.postData.tx.tx.h, username, this.props.postData.tx.in[0].e.a)}>reply</div>\n    )\n    var tipToggle = (<div className=\"metadata metadata-button\" onClick={this.toggleTipHandler}>{this.state.tip ? 'vote' : 'tip'}</div>\n    )\n\n    return (\n\n      <div className=\"post-container\"  >\n        <div className='post'>\n          <div>\n            <div className=\"post-data\">\n              <div className=\"reward\">{rewardInBitcoin}<strong>₿</strong> </div>\n              <div className=\"post-title\" style={{ cursor: 'pointer' }} onClick={() => window.open(url)}>{title}</div>\n            </div>\n            <div className=\"post-metadata\">\n              <div className=\"metadata\"> ({timeago})</div>\n              <div className=\"metadata\">{username}</div>\n\n              <div className=\"metadata\" style={{ cursor: 'pointer' }} onClick={() => this.props.toggleComments(this.props.postData.tx)} > {showComments ? 'hide comments ▼' : 'show comments ▶'}</div>\n              \n              {selfPost ? null : [replyButton, tipToggle]}\n            </div>\n          </div>\n          {!showMoneyButton && !this.state.tip? <div style={{ height: 50, width:120, display:'flex',alignItems:'center', justifyContent:'center' }}>{previouslyVoted?\"Voted! 🗳️\":null}</div> : <div style={{ width: this.state.tip ? 150 : 120, }} >\n            {moneyButton}\n          </div>}\n\n        </div>\n\n        {showComments ? <CommentContainer replyHandler={this.props.replyHandler} userId={this.props.userId} comments={this.props.comments} /> : null}\n      </div>\n\n\n\n    );\n  }\n}\n\n","import React from 'react';\nimport Cookies from 'universal-cookie';\nlet MoneyButton = require('@moneybutton/react-money-button').default\n\nexport default class LoginAlert extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            input:''\n        }\n    }\n\n    onPaymentHandler=(payment)=>{\n        const cookies = new Cookies();\n        if(this.state.input!=''){\n            cookies.set('userId', payment.userId.toString(), { path: '/' });\n            cookies.set('username', this.state.input, { path: '/' });\n            this.props.loginHandler();\n        }\n        \n        console.log(payment.userId)\n        console.log(payment);\n    }\n\n    inputOnChangeHandler=(event)=>{\n        this.setState({\n            input:event.target.value\n        })\n    }\n\n    render(){return (\n        <div className=\"login-container\">\n            <div className=\"login-alert w-form\">\n              <form id=\"email-form-3\" name=\"email-form-3\" data-name=\"Email Form 3\" className=\"login-form\">\n                <div className=\"div-block-2\" onClick={this.props.xHandler}>\n                  <div className=\"login-cancel\" >X</div>\n                </div>\n                <div className=\"login-title\" style={{pointerEvents:'none'}} >Login</div>\n                    <input \n                        onChange={this.inputOnChangeHandler}\n                        type=\"text\" \n                        className=\"login-username w-input\" \n                        maxLength={256} name=\"name-2\" \n                        data-name=\"Name 2\" \n                        placeholder=\"Desired Username\" id=\"name-2\" />\n                <div className=\"mb-container\" ><MoneyButton\n                  to='112'\n                  amount='0.01'\n                  currency='USD'\n                  onPayment={this.onPaymentHandler}\n                /></div>\n              </form>\n\n            </div>\n          </div>\n    );}\n}","import React from 'react';\nlet MoneyButton = require('@moneybutton/react-money-button').default\n\n var convertToHex=(str)=> {\n  var hex = '';\n  for (var i = 0; i < str.length; i++) {\n      hex += '' + str.charCodeAt(i).toString(16);\n  }\n  return hex;\n}\n\n\nexport default class ReplyForm extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      reply:''\n    }\n\n  }\n\n  inputChangeHandler=(e)=>{\n    this.setState({\n      reply:e.target.value\n    })\n    \n  }\n\n  render() {\n    return (\n      <div className=\"new-reply-container\">\n        <div className=\"new-reply-form w-form\">\n          <form id=\"email-form-2\" name=\"email-form-2\" data-name=\"Email Form 2\" className=\"form-2\">\n            <div className=\"div-block\">\n              <div>Replying to: {this.props.replyingTo.username}</div>\n              <div className=\"login-cancel\" onClick={this.props.hideReply}>X</div>\n            </div>\n            <textarea onChange={this.inputChangeHandler} id=\"field\" name=\"field\" placeholder=\"Example Text\" maxLength={5000} className=\"textarea w-input\" defaultValue={\"\"} />\n            <MoneyButton\n              outputs={[\n                {\n                  amount: 0,\n                  currency: 'BSV',\n                  type: 'SCRIPT',\n                  script: 'OP_RETURN ' + convertToHex('13beK8bifnhuC8pawWvMrPCaWoTQi5LnZf') + ' ' + convertToHex('comment') + ' ' + convertToHex(this.props.replyingTo.path) + ' ' + convertToHex(encodeURIComponent(this.state.reply)) + ' ' + convertToHex(this.props.username) +' ' + convertToHex(this.props.userId)\n\n                }, {\n                  to: this.props.replyingTo.address,\n                  amount: '0.01',\n                  currency: 'USD'\n\n                }\n              ]}\n              onPayment={this.props.hideReply}\n\n            />\n          </form>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nlet MoneyButton = require('@moneybutton/react-money-button').default\n\nfunction convertToHex(str) {\n    var hex = '';\n    for (var i = 0; i < str.length; i++) {\n        hex += '' + str.charCodeAt(i).toString(16);\n    }\n    return hex;\n}\n\n\nexport default class PostForm extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            url:'',\n            title:'',\n            opReturn:''\n\n        }\n    }\n\n   \n\n\n    urlChangeHandler=(e)=>{\n        this.setState({\n            url:e.target.value\n        })\n    }\n\n    titleChangeHandler=(e)=>{\n        this.setState({\n            title:e.target.value\n        })\n        \n    }\n\n    render() {\n        var opreturn= convertToHex('13beK8bifnhuC8pawWvMrPCaWoTQi5LnZf')+ ' ' + convertToHex('post/vote') + ' ' + convertToHex('post')  + ' ' + convertToHex(encodeURIComponent(this.state.title))+ ' ' + convertToHex(encodeURI(this.state.url))+ ' ' + convertToHex(this.props.username) + ' ' + convertToHex(this.props.userId) \n        \n        return (\n            <div className=\"new-post w-form\">\n                <form id=\"email-form\" name=\"email-form\" data-name=\"Email Form\" className=\"form\">\n                    <input onChange={this.titleChangeHandler} type=\"text\" className=\"text-field w-input\" maxLength={256} name=\"name\" data-name=\"Name\" placeholder=\"Post Title\" id=\"name\" />\n                    <input onChange={this.urlChangeHandler} type=\"email\" className=\"text-field w-input\" maxLength={256} name=\"email\" data-name=\"Email\" placeholder=\"Post URL\" id=\"email\" required />\n                    <div className=\"text-block-7\">* Each post donates $0.01 to <a href=\"https://faucet.allaboard.cash/\" target=\"_blank\" className=\"link\">faucet.allaboard.cash</a></div>\n                    <MoneyButton\n                        outputs={[\n                            {   \n                                amount:0,\n                                currency:'BSV',\n                                type:'SCRIPT',\n                                script:'OP_RETURN ' + opreturn\n\n                            },{\n                                to:'1JM394PQB47chcs49PCe3JETLDaBwzieBP',\n                                amount: '0.01',\n                                currency: 'USD'\n\n                            }\n                        ]}\n                        onPayment={this.props.finishSubmitHandler}\n                    />\n                </form>\n\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Post from './components/Post.js';\nimport Cookies from 'universal-cookie';\nimport LoginAlert from './components/LoginAlert';\nimport ReplyForm from './components/ReplyForm';\nimport PostForm from './components/PostForm';\nlet MoneyButton = require('@moneybutton/react-money-button').default\n\nfunction chunkString(str, len) {\n  var _size = Math.ceil(str.length / len),\n    _ret = new Array(_size),\n    _offset\n    ;\n\n  for (var _i = 0; _i < _size; _i++) {\n    _offset = _i * len;\n    _ret[_i] = str.substring(_offset, _offset + len);\n  }\n\n  return _ret;\n}\n\nfunction validURL(str) {\n  var pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n    '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n    '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n    '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n  return !!pattern.test(str);\n}\n\n\nclass App extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.cookies = new Cookies();\n    const username = this.cookies.get('username');\n    const userId = this.cookies.get('userId');\n\n    var state = {\n      showLoginAlert: false,\n      loggedIn: false,\n      replying: false,\n      replyingTo: null,\n      posting: false,\n      showCommentsFor: null,\n      commentsTransactions: null,\n      comments: null,\n      mode: 'top',\n      dateRange: 'today',\n      userId: null,\n      username: null,\n      transactions: [],\n      posts: []\n    }\n\n    if (username && userId) {\n      state.username = username;\n      state.userId = userId;\n      state.loggedIn = true;\n    }\n    this.state = state;\n    this.loadPosts();\n    this.createPostVoteSocket();\n\n  }\n\n\n\n\n\n  processPostsVotes = (transactions) => {\n    //make sure there are the right number of pushdata's\n\n    var posts = {};\n    var votes = [];\n\n    //filter invalid tx's and separate posts from votes\n    var transactions = transactions.filter(tx => {\n      var valid = false\n      if (tx.out[0].s3) {\n        if (tx.out[0].s3 == 'post') {\n          //checks for the right number of pushdata's\n          valid = tx.out[0].s7 && (validURL(decodeURI(tx.out[0].s5)) || decodeURI(tx.out[0].s5).includes('medium'))\n          if (valid) {\n            //donation sometimes happens in second output\n            var secondOutput = false\n            if (tx.out[2]) {\n              secondOutput = tx.out[2].e.a == '1JM394PQB47chcs49PCe3JETLDaBwzieBP'\n            }\n            //checks both outputs for donation\n            var donated = tx.out[1].e.a == '1JM394PQB47chcs49PCe3JETLDaBwzieBP' | secondOutput\n            //adds valid post to posts object\n            if (donated) {\n              posts[tx.tx.h] = { tx: tx, reward: 0, voters: [] }\n\n            }\n\n          }\n\n\n        } else if (tx.out[0].s3 == 'vote') {\n          valid = tx.out[0].s5;\n          if (valid) {\n            votes.push(tx);\n\n          }\n\n        }\n\n      }\n      return valid;\n    })\n    console.log('votes', votes)\n    console.log(posts);\n\n    // let posts = {}\n    // for (let i = 0; i < transactions.length; i++) {\n\n    //   if (transactions[i].out[0].s3 == 'post') {\n    //     var secondOutput = false\n    //     if (transactions[i].out[2]) {\n    //       secondOutput = transactions[i].out[2].e.a == '1JM394PQB47chcs49PCe3JETLDaBwzieBP'\n    //     }\n    //     var donated = transactions[i].out[1].e.a == '1JM394PQB47chcs49PCe3JETLDaBwzieBP' | secondOutput\n    //     if (donated) {\n    //       posts[transactions[i].tx.h] = { tx: transactions[i], reward: 0, voters: [] }\n\n    //     }\n    //   }\n    // }\n\n    // for (let i = 0; i < posts.length; i++) {\n\n\n    // }\n\n    //loop through votes to assign them properly\n    for (let i = 0; i < votes.length; i++) {\n      //does vote have corresponding post?\n      var postTxid = votes[i].out[0].s4\n      if (posts[postTxid]) {\n        var correctAddress = posts[postTxid].tx.in[0].e.a == votes[i].out[1].e.a;\n        var correctAddressSecondOutput = false;\n        if (votes[i].out[2]) {\n          correctAddressSecondOutput = posts[postTxid].tx.in[0].e.a == votes[i].out[2].e.a;\n        }\n\n        correctAddress = correctAddress || correctAddressSecondOutput;\n        var voterId = votes[i].out[0].s5;\n        var prevVoters = posts[postTxid].voters;\n        var selfVote = voterId == posts[postTxid].tx.out[0].s7;\n\n        if (correctAddress && !prevVoters.includes(voterId) && !selfVote) {\n          //tabulating upvote total\n          correctAddressSecondOutput ? posts[postTxid].reward += votes[i].out[2].e.v : posts[postTxid].reward += votes[i].out[1].e.v;\n          prevVoters.push(voterId) // keeps track of unique voters\n\n        }\n      }\n    }\n\n\n\n    //start comment out\n    // var postsKeys = Object.keys(posts);\n\n    // //loop through posts\n    // for (let i = 0; i < postsKeys.length; i++) {\n    //   //loop through transactions to find upvotes for specific post\n    //   for (let j = 0; j < transactions.length; j++) {\n    //     //is upvote and is upvote for current post?\n    //     if (transactions[j].out[0].s4 == postsKeys[i]) {\n    //       var correctAddress = posts[postsKeys[i]].tx.in[0].e.a == transactions[j].out[1].e.a;\n\n    //       var correctAddressSecondOutput = false;\n    //       if (transactions[j].out[2]) {\n    //         correctAddressSecondOutput = posts[postsKeys[i]].tx.in[0].e.a == transactions[j].out[2].e.a;\n    //       }\n\n    //       var voterId = transactions[j].out[0].s5;\n    //       var prevVoters = posts[postsKeys[i]].voters;\n    //       var selfVote = voterId == posts[postsKeys[i]].tx.out[0].s7;\n    //       //TODO: var selfVote = do a self vote check\n\n    //       if (correctAddress && !prevVoters.includes(voterId) && !selfVote) {\n    //         //tabulating upvote total\n    //         posts[postsKeys[i]].reward += transactions[j].out[1].e.v;\n    //         prevVoters.push(voterId) // keeps track of unique voters\n\n    //       } else if (correctAddressSecondOutput && !prevVoters.includes(voterId) && !selfVote) {\n    //         posts[postsKeys[i]].reward += transactions[j].out[2].e.v;\n    //         prevVoters.push(voterId)\n    //       }\n\n    //     }\n    //   }\n    // }\n\n    var postsArray = Object.values(posts)\n\n\n\n\n    this.setState({\n      posts: postsArray\n    })\n\n  }\n\n\n\n  loadPosts = () => {\n\n\n    var query = { \"v\": 3, \"q\": { \"find\": { \"out.s1\": \"13beK8bifnhuC8pawWvMrPCaWoTQi5LnZf\", \"out.s2\": \"post/vote\" }, \"limit\": 1000 } };\n    var b64 = btoa(JSON.stringify(query));\n    var url;\n    if (this.state.dateRange == \"today\") {\n      url = \"https://chronos.bitdb.network/q/1P6o45vqLdo6X8HRCZk8XuDsniURmXqiXo/\" + b64;\n    } else {\n      url = \"https://weekly.bitdb.network/q/12KQyEvGbHcJmavgmB1jDeTSJhJTzQ5ePg/\" + b64;\n\n    }\n\n\n    var header = {\n      headers: { key: \"1EsRL44h3xNm8G4hT35ns3nNPicAHWAftc\" }\n    };\n\n    fetch(url, header).then(function (r) {\n      return r.json()\n    }).then((r) => {\n      var result = JSON.stringify(r, null, 2);\n      result = JSON.parse(result);\n\n      var transactions = result.t;\n\n      console.log(transactions);\n\n      this.processPostsVotes(transactions);\n      this.setState({\n        transactions\n      })\n\n\n    })\n  }\n\n  createPostVoteSocket = () => {\n\n    var socketQuery = { \"v\": 3, \"q\": { \"find\": { \"out.s1\": \"13beK8bifnhuC8pawWvMrPCaWoTQi5LnZf\", \"out.s2\": \"post/vote\" } } };\n\n    var b64 = btoa(JSON.stringify(socketQuery))\n    // Subscribe to EventSource\n    var url = \"https://chronos.bitdb.network/s/1P6o45vqLdo6X8HRCZk8XuDsniURmXqiXo/\" + b64;\n    var socket = new EventSource(url)\n    // Handle new messages\n\n    socket.onmessage = (e) => {\n\n      var transactions = JSON.parse(JSON.stringify(JSON.parse(e.data), null, 2)).data\n      if (transactions.length > 0) {\n        this.loadPosts()\n      }\n\n      // var updatedTransactions = this.state.transactions.concat(transactions)\n      // this.processPostsVotes(updatedTransactions)\n      // this.setState({\n      //   transactions: updatedTransactions\n      // });\n\n\n\n\n    }\n\n  }\n\n\n\n  hideLoginAlert = () => {\n    this.setState({\n      showLoginAlert: false\n    })\n  }\n\n  submitHandler = () => {\n    if (!this.state.loggedIn) {\n      this.setState({\n        showLoginAlert: true\n      })\n    } else if (this.state.posting == true) {\n      this.setState({\n        posting: false\n      })\n    }\n    else {\n      this.setState({\n        replying: false,\n        posting: true,\n        mode: 'new',\n        dateRange: 'today'\n      }, this.loadPosts\n      );\n\n    }\n  }\n\n  switchMode = () => {\n    this.loadPosts();\n    if (this.state.mode == 'top') {\n      this.setState({ mode: 'new' })\n    } else {\n      this.setState({ mode: 'top' })\n    }\n  }\n\n  loginHandler = () => {\n    this.setState({\n      loggedIn: true,\n      userId: this.cookies.get('userId'),\n      username: this.cookies.get('username')\n    })\n    this.hideLoginAlert();\n  }\n\n  replyHandler = (path, username, address) => {\n    if (this.state.loggedIn) {\n      this.setState({\n        replying: true,\n        replyingTo: {\n          path,\n          username,\n          address\n        }\n      })\n    } else {\n      this.setState({ showLoginAlert: true });\n    }\n\n  }\n\n  hideReplyFormHandler = () => {\n    this.setState({\n      replying: false,\n      replyingTo: null\n    })\n  }\n\n  toggleCommentsHandler = (postTransaction) => {\n    if (this.state.showCommentsFor == postTransaction.tx.h) {\n      // this.commentsSocket = null;\n      this.setState({\n        showCommentsFor: null\n      })\n    } else {\n      //this.commentsSocket = null;\n      this.loadComments(postTransaction);\n\n\n\n    }\n\n\n  }\n\n  processComments = (transactions, postTransaction) => {\n    var transactions = transactions.filter(tx => {\n      var valid = false\n      if (tx.out[0].s6) {\n        valid = true\n      }\n\n\n      return valid;\n    })\n\n\n    var comments = {};\n    var maxDepth = 0;\n    var rootPath = postTransaction.tx.h;\n    var sendAddress = postTransaction.in[0].e.a\n\n\n    //loops to find comments of depth=1 and adds to comments object\n    for (let i = 0; i < transactions.length; i++) {\n      var correctSendAddress = (sendAddress == transactions[i].out[1].e.a) || (sendAddress == transactions[i].out[2].e.a);\n      var selfComment = transactions[i].out[0].s6 == postTransaction.out[0].s7;\n\n      if (transactions[i].out[0].s3.length / 64 > maxDepth) {\n        maxDepth = transactions[i].out[0].s3.length / 64;\n      }\n      if (transactions[i].out[0].s3 == postTransaction.tx.h && correctSendAddress && !selfComment) {\n\n        comments[transactions[i].tx.h] = {\n          tx: transactions[i],\n          comments: 0\n\n        }\n      }\n    }\n\n\n    if (maxDepth > 1) {\n      for (let i = 0; i < transactions.length; i++) {\n\n\n        if (transactions[i].out[0].s3.length == 64 * 2) {\n          var pathArray = chunkString(transactions[i].out[0].s3, 64);\n          if (comments[pathArray[1]]) {\n            var sendAddress = comments[pathArray[1]].tx.in[0].e.a\n            var correctSendAddress = (sendAddress == transactions[i].out[1].e.a) || (sendAddress == transactions[i].out[2].e.a)\n            var selfComment = comments[pathArray[1]].tx.out[0].s6 == transactions[i].out[0].s6;\n            if (correctSendAddress && !selfComment) {\n              comments[pathArray[1]][transactions[i].tx.h] = {\n                tx: transactions[i],\n                comments: 0\n              }\n              comments[pathArray[1]].comments += 1\n\n            }\n\n          }\n\n\n        }\n      }\n\n    }\n\n    if (maxDepth > 2) {\n      for (let i = 0; i < transactions.length; i++) {\n        if (transactions[i].out[0].s3.length == 64 * 3) {\n          var pathArray = chunkString(transactions[i].out[0].s3, 64);\n          if (comments[pathArray[1]]) {\n            if (comments[pathArray[1]][pathArray[2]]) {\n              var sendAddress = comments[pathArray[1]][pathArray[2]].tx.in[0].e.a\n              var correctSendAddress = (sendAddress == transactions[i].out[1].e.a) || (sendAddress == transactions[i].out[2].e.a)\n              var selfComment = comments[pathArray[1]][pathArray[2]].tx.out[0].s6 == transactions[i].out[0].s6;\n              if (correctSendAddress && !selfComment) {\n                comments[pathArray[1]][pathArray[2]][transactions[i].tx.h] = {\n                  tx: transactions[i],\n                  comments: 0\n                }\n                comments[pathArray[1]][pathArray[2]].comments += 1\n              }\n\n            }\n          }\n        }\n      }\n\n    }\n\n    if (maxDepth > 3) {\n      for (let i = 0; i < transactions.length; i++) {\n        if (transactions[i].out[0].s3.length == 64 * 4) {\n          var pathArray = chunkString(transactions[i].out[0].s3, 64);\n          if (comments[pathArray[1]]) {\n            if (comments[pathArray[1]][pathArray[2]]) {\n              if (comments[pathArray[1]][pathArray[2]][pathArray[3]]) {\n                var sendAddress = comments[pathArray[1]][pathArray[2]][pathArray[3]].tx.in[0].e.a\n                var correctSendAddress = (sendAddress == transactions[i].out[1].e.a) || (sendAddress == transactions[i].out[2].e.a)\n\n                var selfComment = comments[pathArray[1]][pathArray[2]][pathArray[3]].tx.out[0].s6 == transactions[i].out[0].s6;\n                if (correctSendAddress && !selfComment) {\n                  comments[pathArray[1]][pathArray[2]][pathArray[3]][transactions[i].tx.h] = {\n                    tx: transactions[i],\n                    comments: 0\n                  }\n                  comments[pathArray[1]][pathArray[2]][pathArray[3]].comments += 1\n                }\n              }\n            }\n          }\n        }\n      }\n\n    }\n    if (maxDepth > 4) {\n      for (let i = 0; i < transactions.length; i++) {\n        if (transactions[i].out[0].s3.length == 64 * 5) {\n          var pathArray = chunkString(transactions[i].out[0].s3, 64);\n          if (comments[pathArray[1]]) {\n            if (comments[pathArray[1]][pathArray[2]]) {\n              if (comments[pathArray[1]][pathArray[2]][pathArray[3]]) {\n                if (comments[pathArray[1]][pathArray[2]][pathArray[3]][pathArray[4]]) {\n                  var sendAddress = comments[pathArray[1]][pathArray[2]][pathArray[3]][pathArray[4]].tx.in[0].e.a\n                  var correctSendAddress = (sendAddress == transactions[i].out[1].e.a) || (sendAddress == transactions[i].out[2].e.a)\n\n                  var selfComment = comments[pathArray[1]][pathArray[2]][pathArray[3]][pathArray[4]].tx.out[0].s6 == transactions[i].out[0].s6;\n                  if (correctSendAddress && !selfComment) {\n                    comments[pathArray[1]][pathArray[2]][pathArray[3]][pathArray[4]][transactions[i].tx.h] = {\n                      tx: transactions[i],\n                      comments: 0\n                    }\n                    comments[pathArray[1]][pathArray[2]][pathArray[3]][pathArray[4]].comments += 1\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n    }\n\n\n    this.setState({\n      comments: Object.values(comments),\n      showCommentsFor: rootPath\n\n    })\n\n\n  }\n\n  loadComments = (postTransaction) => {\n    var rootPath = postTransaction.tx.h\n    var query = { \"v\": 3, \"q\": { \"find\": { \"out.s1\": \"13beK8bifnhuC8pawWvMrPCaWoTQi5LnZf\", \"out.s2\": \"comment\", \"out.s3\": { \"$regex\": \".*\" + rootPath + \".*\" } } } };\n    var b64 = btoa(JSON.stringify(query));\n    var url = \"https://weekly.bitdb.network/q/12KQyEvGbHcJmavgmB1jDeTSJhJTzQ5ePg/\" + b64;\n\n\n    var header = {\n      headers: { key: \"1EsRL44h3xNm8G4hT35ns3nNPicAHWAftc\" }\n    };\n\n    fetch(url, header).then(function (r) {\n      return r.json()\n    }).then((r) => {\n      var result = JSON.stringify(r, null, 2);\n      result = JSON.parse(result);\n\n      var transactions = result.t;\n      this.processComments(transactions, postTransaction);\n\n      this.setState({\n        commentsTransactions: transactions,\n      }\n        // , () => this.createCommentsSocket(postTransaction)\n      )\n\n\n\n    })\n  }\n\n  createCommentsSocket = (postTransaction) => {\n\n    var rootPath = postTransaction.tx.h\n    var socketQuery = { \"v\": 3, \"q\": { \"find\": { \"out.s1\": \"13beK8bifnhuC8pawWvMrPCaWoTQi5LnZf\", \"out.s2\": \"comment\", \"out.s3\": { \"$regex\": \".*\" + rootPath + \".*\" } } } };\n\n    var b64 = btoa(JSON.stringify(socketQuery))\n    // Subscribe to EventSource\n    var url = \"https://chronos.bitdb.network/s/1P6o45vqLdo6X8HRCZk8XuDsniURmXqiXo/\" + b64;\n    this.commentsSocket = new EventSource(url)\n    // Handle new messages\n\n    this.commentsSocket.onmessage = (e) => {\n\n      var transactions = JSON.parse(JSON.stringify(JSON.parse(e.data), null, 2)).data\n\n      var updatedTransactions = this.state.commentsTransactions.concat(transactions)\n      if (this.state.showCommentsFor == postTransaction.tx.h) {\n        this.processComments(updatedTransactions, postTransaction)\n        this.setState({\n          commentsTransactions: updatedTransactions\n        });\n      }\n\n\n\n\n    }\n\n  }\n\n  toggleDateRange = () => {\n    var newState;\n    this.state.dateRange == 'today' ? newState = 'weekly' : newState = 'today';\n    this.setState({\n      mode: 'top',\n      dateRange: newState\n    }, () => {\n      this.loadPosts();\n    })\n  }\n\n\n\n  render() {\n    var postElements = [];\n    var posts = this.state.posts.slice()\n    var numTopPosts;\n    this.state.dateRange == 'today' ? numTopPosts = 10 : numTopPosts = 15;\n\n\n    if (this.state.mode == 'top') {\n      posts.sort((a, b) => {\n        if (a.reward == b.reward) {\n\n          return a.tx.timestamp - b.tx.timestamp;\n        } else {\n          return b.reward - a.reward\n        }\n\n      })\n      while (posts.length > numTopPosts) {\n        posts.pop()\n      }\n\n    } else {\n\n      posts.sort((a, b) => {\n        return b.tx.timestamp - a.tx.timestamp\n      })\n\n    }\n\n\n\n    for (let i = 0; i < posts.length; i++) {\n      postElements.push(<Post loggedIn={this.state.loggedIn} postData={posts[i]} comments={this.state.comments} showCommentsFor={this.state.showCommentsFor} toggleComments={this.toggleCommentsHandler} replyHandler={this.replyHandler} userId={this.state.userId} />)\n\n    }\n\n    var headerRight;\n    if (this.state.loggedIn) {\n      headerRight = (\n        <div className=\"header-right\" >\n          <div className=\"header-button\" onClick={() => this.setState({ showLoginAlert: true, changingUsername: true })}>\n            <div className=\"header-button-text\" >change username</div>\n          </div>\n          <div className='username'>{this.state.username}</div>\n        </div>\n\n      );\n    } else {\n      headerRight = (\n        <div className=\"header-right\">\n          <div className=\"header-button\" onClick={() => this.setState({ showLoginAlert: true })}>\n            <div className=\"header-button-text\" >login</div>\n          </div>\n        </div>\n      )\n    }\n\n    var dumbvar;\n\n\n\n    return (\n      <div>\n        {/* This site was created in Webflow. http://www.webflow.com */}\n        {/* Last Published: Sat Apr 20 2019 23:09:33 GMT+0000 (UTC) */}\n        <meta charSet=\"utf-8\" />\n        <title>bsvnews</title>\n        <meta content=\"width=device-width, initial-scale=1\" name=\"viewport\" />\n        <meta content=\"Webflow\" name=\"generator\" />\n        {/*[if lt IE 9]><![endif]*/}\n\n\n        <div className=\"container w-container\" style={{ paddingBottom: 10 }}>\n          <div className=\"header\">\n            <div className=\"header-left\" >\n              <div className=\"title\">BSV News</div>\n              <div className='button-container'>\n                {this.state.dateRange == 'today' ? <div className=\"header-button\" onClick={this.switchMode}> <div className=\"header-button-text\"  >{this.state.mode == 'top' ? 'new' : 'top'} </div> </div> : null}\n                <div className=\"header-button\" onClick={this.submitHandler}> <div className=\"header-button-text\" >{this.state.posting ? \" X \" : \"submit\"}</div></div>\n                <div className=\"header-button\" onClick={this.loadPosts}> <div className=\"header-button-text\" >reload</div></div>\n                <div className=\"header-button\" onClick={this.toggleDateRange}> <div className=\"header-button-text\" >{this.state.dateRange == 'today' ? 'weekly' : 'today'}</div></div>\n\n              </div>\n            </div>\n\n            {headerRight}\n\n\n          </div>\n\n          {this.state.showLoginAlert ? <LoginAlert xHandler={this.hideLoginAlert} loginHandler={this.loginHandler} /> : null}\n          {this.state.posting ? <PostForm username={this.state.username} userId={this.state.userId} finishSubmitHandler={this.submitHandler} /> : null}\n\n          <div className=\"posts\">\n            {postElements}\n          </div>\n\n          {this.state.replying ? <ReplyForm hideReply={this.hideReplyFormHandler} replyingTo={this.state.replyingTo} username={this.state.username} userId={this.state.userId} /> : null}\n          <div className='metadata' style={{ width: '100%', padding: 10, paddingBottom: 0, paddingRight: 20, display: 'flex', justifyContent: 'flex-end' }}> flexwrap test Created by $canyouhandleme</div>\n        </div>\n\n      </div>\n\n\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}